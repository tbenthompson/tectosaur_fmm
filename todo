gpu p2l,m2l,l2l,l2p
redo the analysis of best worker group size, best approx order, best mac with FMM instead of treecode

move fmm_integral_op into this package
use FMM for okada -- just try it out first, make sure its accurate.
read about the implementation of the high-performance volumetric integration tools.

get rid of the error about Wstrict-prototypes: https://stackoverflow.com/questions/8106258/cc1plus-warning-command-line-option-wstrict-prototypes-is-valid-for-ada-c-o



use homogeneity in the p2m, so that cells can be any size and I could go back to using a kdtree or other data structure, so long as all cells have spherical bounds.  since i'm not using the relative positions of cells, i could use shrinked octree node bounds.

use symmetry in the appropriate kernels






NOT NOW:
write a script to gather performance counters for opencl
http://docs.nvidia.com/cuda/profiler-users-guide/#command-line-profiler-options

allow configuration of qr pseudoinverse epsilon, do gpu qr inverse.

for small problems, the main interaction traversal should mark whether a cells multipoles are ever used, then the downward pass will propagate that information allowing p2m, and m2m kernels to be pruned.
pruning will allow fmm to be faster in all cases.

fast tree construction?  gpu sorting of morton z-curve values: vexcl and boost compute both do sorting, also clogs. probably don't need to do the sorting on the gpu

optimize memory usage
